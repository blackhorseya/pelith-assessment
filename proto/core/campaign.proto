syntax = "proto3";

package core;

import "entity/domain/core/model/model.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blackhorseya/pelith-assessment/proto/core";

// CreateCampaignRequest is the request for create campaign
message CreateCampaignRequest {
  string name = 1;
  google.protobuf.Timestamp start_time = 2;
  entity.domain.core.model.CampaignMode mode = 3;
  string target_pool = 4;
  double min_amount = 5;
}

// CreateCampaignResponse is the response for create campaign
message CreateCampaignResponse {
  string id = 1;
}

// StartCampaignRequest is the request for start campaign
message StartCampaignRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Timestamp start_time = 3;
  entity.domain.core.model.CampaignMode mode = 4;
  string target_pool = 5;
  double min_amount = 6;
}

// StartCampaignResponse is the response for start campaign
message StartCampaignResponse {
  string id = 1;
}

// GetCampaignRequest is the request for get campaign
message GetCampaignRequest {
  string id = 1;
}

// GetCampaignResponse is the response for get campaign
message GetCampaignResponse {
  entity.domain.core.model.Campaign campaign = 1;
  repeated entity.domain.core.model.Task tasks = 2;
}

// AddTasksForCampaignRequest is the request for add tasks for campaign
message AddTasksForCampaignRequest {
  string campaign_id = 1;
  repeated entity.domain.core.model.Task tasks = 2;
}

// AddTasksForCampaignResponse is the response for add tasks for campaign
message AddTasksForCampaignResponse {}

// CampaignService is the service for campaign
service CampaignService {
  rpc CreateCampaign(CreateCampaignRequest) returns (CreateCampaignResponse) {}
  rpc StartCampaign(StartCampaignRequest) returns (StartCampaignResponse) {}
  rpc GetCampaign(GetCampaignRequest) returns (GetCampaignResponse) {}
  rpc AddTasksForCampaign(AddTasksForCampaignRequest) returns (AddTasksForCampaignResponse) {}
}
